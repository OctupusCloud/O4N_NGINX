server {
    listen 3008 ssl http2; # managed by Certbot
#    http2 on;
    server_name {{ DOMAIN_SERVER }} {{ IP_SERVER }};

    ssl_certificate /etc/letsencrypt/live/{{ DOMAIN_SERVER }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ DOMAIN_SERVER }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location / {
        #proxy_pass http://o4n_entropy:3007;
        proxy_pass http://{{ BACKEND }}:{{ PORT }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl http2; # managed by Certbot
#    http2 on;

    server_name {{ DOMAIN_SERVER }} localhost {{ IP_SERVER }};

    location / {
        root   /usr/share/nginx/html;
        try_files $uri /index.html;
    }

    # Enable DH Params
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Enable HSTS
    add_header Strict-Transport-Security "max-age=31536000" always;

    # SSL sessions
    ssl_session_cache shared:SSL:40m;

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    if ($host = {{ IP_SERVER }}) {
        return 301 https://$server_name$request_uri;
    } # managed by Certbot

    ssl_certificate /etc/letsencrypt/live/{{ DOMAIN_SERVER }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ DOMAIN_SERVER }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

    listen       80;
    listen  [::]:80;
    server_name {{ DOMAIN_SERVER }};

    if ($host = {{ DOMAIN_SERVER }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = {{ IP_SERVER }}) {
        return 301 https://$server_name$request_uri;
    } # managed by Certbot
    return 404; # managed by Certbot
}
