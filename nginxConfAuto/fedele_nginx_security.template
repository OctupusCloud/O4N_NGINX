events {
    # Configuración de eventos.
}

http {
    # Configuración global de HTTP.

    # Enable DH Params
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Enable HSTS
    add_header Strict-Transport-Security "max-age=31536000" always;

    # SSL sessions
    ssl_session_cache shared:SSL:40m;

    # Configuración del servidor para HTTP (puerto 80).
    server {
        listen 80;
        server_name {{ DOMAIN_SERVER }} {{ IP_SERVER }};

        # Redirigir todas las solicitudes HTTP a HTTPS.
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Configuración del servidor para HTTPS (puerto 443).
    server {
        listen 443 ssl http2; # managed by Certbot
        server_name {{ DOMAIN_SERVER }} {{ IP_SERVER }};

        # Configuración de SSL gestionada por Certbot
        ssl_certificate /etc/letsencrypt/live/{{ DOMAIN_SERVER }}/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/{{ DOMAIN_SERVER }}/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        if ($host = {{ IP_SERVER }}) {
            return 301 https://$server_name$request_uri;
        } # managed by Certbot

        # Proxy pasando las solicitudes a la aplicación en el puerto 8080.
        location / {
            proxy_pass http://{{ BACKEND }}:{{ PORT }};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Incluir otras configuraciones globales si es necesario.
}
